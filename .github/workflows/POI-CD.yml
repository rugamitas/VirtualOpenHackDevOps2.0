# This workflow will build and push a ASP.net application to an Azure Web App when a release is created.

on:
  push:
    branches: [POI(ASP.Net)]
    paths: 'apis/poi/**'
    

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      #Azure CLI login task
      - name: 'Login via Azure CLI'
        uses: Azure/login@v1.1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      #Azure CLI task 
      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
           #Build API-POI Image from Dockerfile on ACR
            azcliversion: latest
            inlineScript: |
              az acr build 'https://github.com/rugamitas/VirtualOpenHackDevOps2.0.git#master:apis/poi/web' --image "${{ secrets.POI_CONTAINER_REPO }}:${{ github.run_number }}" \
              --registry ${{ secrets.AZURE_ACR }} \
              --file Dockerfile

      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          # Name of the Azure Web App
          app-name: openhackt9f3u9t8poi
          # Enter an existing Slot other than the Production slot
          slot-name: staging
          # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
          images: "${{ secrets.AZURE_ACR }}/${{ secrets.POI_CONTAINER_REPO }}:${{ github.run_number }}"

      
      #Azure CLI task to swap web app slot 
      - name: Azure CLI Action
        uses: Azure/cli@v1.0.0
        with:
          azcliversion: latest
          inlineScript: |
            echo "##############################"
            echo "Lets get POI web app health check status"
            curl https://openhackt9f3u9t8poi.azurewebsites.net/api/healthcheck/poi
            if [[ $(curl https://openhackt9f3u9t8poi.azurewebsites.net/api/healthcheck/poi) == 'Healthy' ]]; then
                az webapp deployment slot swap -n "openhackt9f3u9t8poi" -g "openhackt9f3u9t8rg" -s "staging" --target-slot "Production"
                echo "#############################"
                echo "#     Swap completed        #"   
                echo "#############################"
            else
                echo #No Swap will be executed API is not healthy#
            fi
            
